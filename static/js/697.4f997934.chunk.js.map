{"version":3,"file":"static/js/697.4f997934.chunk.js","mappings":"sSAEMA,E,OAAMC,EAAAA,OAAa,CACvBC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIN,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qIAGoBL,EAAIM,IAHxB,+CAGKC,EAHL,EAGKA,KAHL,kBAIIA,EAAKC,SAJT,2HAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,kFAECC,EAFD,8BAEiCD,GAFjC,kBAIoBV,EAAIM,IAAIK,GAJ5B,uBAIKJ,EAJL,EAIKA,KAJL,kBAOIA,GAPJ,2HAaA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,kFACCF,EADD,iBACoBE,GADpB,kBAGoBb,EAAIM,IAAIK,GAH5B,uBAGKJ,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2HAUA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAgCD,GAAhC,kFACCF,EADD,iBACoBE,EADpB,8BAGoBb,EAAIM,IAAIK,GAH5B,uBAGKJ,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2HAUA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAAgCF,GAAhC,kFACCF,EADD,iBACoBE,EADpB,8BAGoBb,EAAIM,IAAIK,GAH5B,uBAGKJ,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2H,yGCDP,UA9CA,WACE,IAAQS,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,gHAEYP,EAAAA,EAAAA,IAAiBC,GAF7B,gBAENR,EAFM,EAENA,QACRY,EAAUZ,GAHI,gDAKde,QAAQC,IAAR,MALc,yDAAH,qDAQfF,GACD,GAAE,CAACN,IAEkB,IAAlBG,EAAOM,QACF,kEAIL,+BACE,wBACGN,EAAOO,KAAI,YAA8B,IAA3Bb,EAA0B,EAA1BA,GAAIc,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzB,OACE,2BACE,wBAAKD,KACL,uBAAIC,MAFGf,EAKZ,OAIV,C","sources":["api/Api.jsx","pages/Movies/Reviews/Review.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst url = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'ddd8814addf1eaac90b3b416df51b9bc',\n  },\n});\n\nexport async function getTrendingMovies() {\n  const getUrl = `/trending/movie/week`;\n  try {\n    const { data } = await url.get(getUrl);\n    return data.results;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function searchMovies(movieName) {\n  // const getUrl = `/search/movie`;\n  const getUrl = `/search/movie?query=${movieName}`;\n  try {\n    const { data } = await url.get(getUrl);\n    // const { data } = await url.get(getUrl, {params: { query: movieName }, });\n\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getDetailsMovies(id) {\n  const getUrl = `/movie/${id}`;\n  try {\n    const { data } = await url.get(getUrl);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getCreditsMovies(id) {\n  const getUrl = `/movie/${id}/credits`;\n  try {\n    const { data } = await url.get(getUrl);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getReviewsMovies(id) {\n  const getUrl = `/movie/${id}/reviews`;\n  try {\n    const { data } = await url.get(getUrl);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviewsMovies } from '../../../api/Api';\nimport PropTypes from 'prop-types';\n\nfunction Reviews() {\n  const { moviesId } = useParams();\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        const { results } = await getReviewsMovies(moviesId);\n        setMovies(results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getMovies();\n  }, [moviesId]);\n\n  if (movies.length === 0) {\n    return <p>We don't have reviews for this movie.</p>;\n  }\n\n    return (\n      <>\n        <ul>\n          {movies.map(({ id, author, content }) => {\n            return (\n              <li key={id}>\n                <h2>{author}</h2>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      </>\n    );\n}\n\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default Reviews;\n"],"names":["url","axios","baseURL","params","api_key","getTrendingMovies","get","data","results","searchMovies","movieName","getUrl","getDetailsMovies","id","getCreditsMovies","getReviewsMovies","moviesId","useParams","useState","movies","setMovies","useEffect","getMovies","console","log","length","map","author","content"],"sourceRoot":""}